@page "/employees/edit/{Id:guid?}"

@using FuelStation.Model.Enumerations;
@using FuelStation.Web.Blazor.Shared.EmployeeDataTranferObjects;
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<PageTitle>Employees Edit</PageTitle>

<h3 class="display-3">Employees</h3>
<h4>Create/Edit</h4>

<style>
    body {
        background-color: #FAF8F1
    }

    h3 {
        font-weight: bold;
    }
</style>

@if (Employee == null) {
    <p>Loading ...</p>

} else {
    <EditForm Model="Employee" OnValidSubmit="OnSave">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="row">
            <div class="col-md-6">
                <label class="form-label">Name</label>
                <InputText class="form-control" @bind-Value="@Employee.Name" />
                <ValidationMessage For="@(()=>Employee.Name)" />
            </div>
            <div class="col-md-6">
                <label class="form-label">Surname</label>
                <InputText class="form-control" @bind-Value="@Employee.Surname" />
                <ValidationMessage For="@(()=>Employee.Surname)" />
            </div>
            <div class="col-md-6">
                <label for="hireDateStart" class="form-label">Choose Hire Date Start</label>
                <InputDate id="hireDateStart" @bind-Value="@Employee.HireDateStart" />
                <ValidationMessage For="@(()=>Employee.HireDateStart)" />
            </div>
            <div class="col-md-6">
                <label for="hireDateEnd" class="form-label">Choose Hire Date End</label>
                <InputDate id="hireDateEnd" @bind-Value="@Employee.HireDateEnd" />
                <ValidationMessage For="@(()=>Employee.HireDateEnd)" />
            </div>
            <div class="col-md-6">
                <label class="form-label">Sallary Per Month</label>
                <InputNumber class="form-control" @bind-Value="@Employee.SallaryPerMonth" />
                <ValidationMessage For="@(()=>Employee.SallaryPerMonth)" />
            </div>
            <div class="col-md-6">
                <label class="form-label">Employee Type</label>
                <select class="form-control" @bind="@Employee.EmployeeType">
                    @foreach (var type in Enum.GetValues<EmployeeType>()) {
                        <option value="@type">@type</option>
                    }
                </select>
            </div>
        </div>

        <div class="row mt-2">
            <div class="col">
                <button class="btn btn-success" type="submit">Save</button>
                <button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
            </div>
        </div>
    </EditForm>


}

@code {
    [Parameter] public Guid? Id { get; set; }
    EmployeeEditDto? Employee { get; set; }

    protected override async Task OnInitializedAsync() {
        try {
            Employee = await httpClient.GetFromJsonAsync<EmployeeEditDto>($"employee/{Id}");
        } catch (Exception ex) {
            navigationManager.NavigateTo($"/error/{ex.Message}");
        }        
    }

    private void OnCancel() {
        navigationManager.NavigateTo("employees");
    }

    private async Task OnSave() {
        HttpResponseMessage? response = null;        
        response = await httpClient.PutAsJsonAsync("employee", Employee);  
        try {
            response.EnsureSuccessStatusCode();
            navigationManager.NavigateTo("employees");
        } catch {
            navigationManager.NavigateTo($"/error/{response.StatusCode}");
        }
    }
}